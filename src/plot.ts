// @ts-ignore
import * as vg from "@uwdata/vgplot";

document.addEventListener("DOMContentLoaded", async () => {
  // configure the coordinator to use DuckDB-WASM
  // creates a new database instance running in-browser
  vg.coordinator().databaseConnector(vg.wasmConnector());

  // load data into the database
  // executes a query generated by the loadCSV helper
  const url = new URL(window.location.href);
  url.pathname = "/data/qt.csv";
  console.log(url.href);
  await vg.coordinator().exec(vg.loadCSV("git", url.href));
  // create a new Param
  const $query = vg.Selection.intersect();

  const view = vg.hconcat(
    vg.vconcat(
      vg.hconcat(
        vg.menu({
          label: "Author name",
          as: $query,
          from: "git",
          column: "Author name",
        }),
        vg.search({
          label: "Commit",
          as: $query,
          from: "git",
          column: "Commit Hash",
          type: "contains",
        }),
      ),
      vg.vspace(10),
      vg.hconcat(
        vg.plot(
          vg.dot(vg.from("git", { filterBy: $query }), {
            x: "Insertions",
            y: "Deletions",
            r: 2,
            opacity: 0.1,
          }),
          vg.intervalXY({
            as: $query,
            brush: { fillOpacity: 0, stroke: "black" },
          }),
          vg.xyDomain(vg.Fixed),
          vg.colorDomain(vg.Fixed),
          vg.margins({ left: 35, top: 20, right: 1 }),
          vg.width(570),
          vg.height(350),
        ),
        vg.hspace(5),
        vg.plot(
          vg.areaY(vg.from("git", { filterBy: $query }), {
            x: "Authored at",
            y: "Insertions",
            fill: "Author name",
          }),
          vg.lineY(vg.from("git", { filterBy: $query }), {
            x: "Authored at",
            y: "Insertions",
          }),
          vg.ruleY([0]),
          vg.yGrid(true),
          // vg.intervalXY({ as: $query, brush: { fillOpacity: 0, stroke: "black" } }),
          // vg.xyDomain(vg.Fixed),
          // vg.colorDomain(vg.Fixed),
          // vg.margins({ left: 35, top: 20, right: 1 }),
          // vg.width(570),
          // vg.height(350)
        ),
      ),
      vg.vspace(5),
      vg.table({
        from: "git",
        maxWidth: 570,
        height: 350,
        filterBy: $query,
      }),
    ),
  );

  document.querySelector("#plots")?.replaceChildren(view);
});
